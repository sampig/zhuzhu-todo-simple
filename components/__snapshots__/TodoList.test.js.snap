// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The TodoList component renders without crashing 1`] = `
Array [
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffff",
        "flexDirection": "row",
      }
    }
  >
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      onChangeText={[Function]}
      placeholder="enter a to-do..."
      rejectResponderTermination={true}
      style={
        Object {
          "borderRadius": 5,
          "borderWidth": 2,
          "flex": 1,
          "fontSize": 20,
          "margin": 5,
          "padding": 5,
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <View
      accessibilityRole="button"
      accessibilityState={Object {}}
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
            ]
          }
        >
             +   
        </Text>
      </View>
    </View>
  </View>,
  <RCTScrollView
    data={
      Array [
        Object {
          "createTime": 1,
          "id": "testId1",
          "title": "test title 1",
        },
        Object {
          "createTime": 100,
          "id": "testId2",
          "title": "test title 2",
        },
        Object {
          "createTime": 518400010,
          "id": "testId3",
          "title": "test title 3",
        },
        Object {
          "createTime": 604800000,
          "id": "testId4",
          "title": "test title 4",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "display": "flex",
        "flex": 1,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "stretch",
              "backgroundColor": "rgba(255, 255, 255, 0.8)",
              "borderWidth": 2,
              "flexDirection": "row",
              "margin": 8,
              "padding": 8,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "borderRadius": 10,
                  "borderWidth": 1,
                  "flex": 6,
                  "flexDirection": "row",
                },
                Object {
                  "borderColor": "#ff0000",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginLeft": 8,
                  "marginRight": 8,
                  "padding": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "fontSize": 20,
                    }
                  }
                >
                  test title 1
                </Text>
              </View>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <Icon
              color="green"
              name="check"
              size={40}
            />
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "stretch",
              "backgroundColor": "rgba(255, 255, 255, 0.8)",
              "borderWidth": 2,
              "flexDirection": "row",
              "margin": 8,
              "padding": 8,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "borderRadius": 10,
                  "borderWidth": 1,
                  "flex": 6,
                  "flexDirection": "row",
                },
                Object {
                  "borderColor": "#cccc00",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginLeft": 8,
                  "marginRight": 8,
                  "padding": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "fontSize": 20,
                    }
                  }
                >
                  test title 2
                </Text>
              </View>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <Icon
              color="green"
              name="check"
              size={40}
            />
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "stretch",
              "backgroundColor": "rgba(255, 255, 255, 0.8)",
              "borderWidth": 2,
              "flexDirection": "row",
              "margin": 8,
              "padding": 8,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "borderRadius": 10,
                  "borderWidth": 1,
                  "flex": 6,
                  "flexDirection": "row",
                },
                Object {
                  "borderColor": "#0000ff",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginLeft": 8,
                  "marginRight": 8,
                  "padding": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "fontSize": 20,
                    }
                  }
                >
                  test title 3
                </Text>
              </View>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <Icon
              color="green"
              name="check"
              size={40}
            />
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "stretch",
              "backgroundColor": "rgba(255, 255, 255, 0.8)",
              "borderWidth": 2,
              "flexDirection": "row",
              "margin": 8,
              "padding": 8,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "borderRadius": 10,
                  "borderWidth": 1,
                  "flex": 6,
                  "flexDirection": "row",
                },
                Object {
                  "borderColor": "#007700",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginLeft": 8,
                  "marginRight": 8,
                  "padding": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "fontSize": 20,
                    }
                  }
                >
                  test title 4
                </Text>
              </View>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <Icon
              color="green"
              name="check"
              size={40}
            />
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>,
  <View
    style={
      Object {
        "padding": 5,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessibilityState={Object {}}
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Clear all
        </Text>
      </View>
    </View>
  </View>,
]
`;
